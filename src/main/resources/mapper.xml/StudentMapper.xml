<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dormitory.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.dormitory.pojo.Student">
    <id column="studentId" jdbcType="INTEGER" property="studentid" />
    <result column="studentNum" jdbcType="VARCHAR" property="studentnum" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dormBuildId" jdbcType="INTEGER" property="dormbuildid" />
    <result column="dormName" jdbcType="VARCHAR" property="dormname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    studentId, studentNum, password, name, dormBuildId, dormName, sex, tel
  </sql>
  <select id="selectByExample" parameterType="com.dormitory.pojo.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where studentId = #{studentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where studentId = #{studentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dormitory.pojo.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dormitory.pojo.Student">
    insert into student (studentId, studentNum, password, 
      name, dormBuildId, dormName, 
      sex, tel)
    values (#{studentid,jdbcType=INTEGER}, #{studentnum,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{dormbuildid,jdbcType=INTEGER}, #{dormname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dormitory.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        studentId,
      </if>
      <if test="studentnum != null">
        studentNum,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="dormbuildid != null">
        dormBuildId,
      </if>
      <if test="dormname != null">
        dormName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="tel != null">
        tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="studentnum != null">
        #{studentnum,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dormbuildid != null">
        #{dormbuildid,jdbcType=INTEGER},
      </if>
      <if test="dormname != null">
        #{dormname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dormitory.pojo.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.studentid != null">
        studentId = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.studentnum != null">
        studentNum = #{record.studentnum,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dormbuildid != null">
        dormBuildId = #{record.dormbuildid,jdbcType=INTEGER},
      </if>
      <if test="record.dormname != null">
        dormName = #{record.dormname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set studentId = #{record.studentid,jdbcType=INTEGER},
      studentNum = #{record.studentnum,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      dormBuildId = #{record.dormbuildid,jdbcType=INTEGER},
      dormName = #{record.dormname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dormitory.pojo.Student">
    update student
    <set>
      <if test="studentnum != null">
        studentNum = #{studentnum,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dormbuildid != null">
        dormBuildId = #{dormbuildid,jdbcType=INTEGER},
      </if>
      <if test="dormname != null">
        dormName = #{dormname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where studentId = #{studentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dormitory.pojo.Student">
    update student
    set studentNum = #{studentnum,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      dormBuildId = #{dormbuildid,jdbcType=INTEGER},
      dormName = #{dormname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR}
    where studentId = #{studentid,jdbcType=INTEGER}
  </update>

<!--  <select id="selectByLimit" resultMap="BaseResultMap" parameterType="com.dormitory.pojo.Student">-->

<!--  </select>-->
</mapper>