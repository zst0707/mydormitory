<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dormitory.mapper.DormMapper">
  <resultMap id="BaseResultMap" type="com.dormitory.pojo.Dorm">
    <id column="dormId" jdbcType="INTEGER" property="dormid" />
    <result column="dormBuildId" jdbcType="INTEGER" property="dormbuildid" />
    <result column="dormName" jdbcType="VARCHAR" property="dormname" />
    <result column="dormType" jdbcType="VARCHAR" property="dormtype" />
    <result column="dormNumber" jdbcType="INTEGER" property="dormnumber" />
    <result column="dormTel" jdbcType="VARCHAR" property="dormtel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dormId, dormBuildId, dormName, dormType, dormNumber, dormTel
  </sql>
  <select id="selectByExample" parameterType="com.dormitory.pojo.DormExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dorm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dorm
    where dormId = #{dormid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dorm
    where dormId = #{dormid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dormitory.pojo.DormExample">
    delete from dorm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dormitory.pojo.Dorm">
    insert into dorm (dormId, dormBuildId, dormName, 
      dormType, dormNumber, dormTel
      )
    values (#{dormid,jdbcType=INTEGER}, #{dormbuildid,jdbcType=INTEGER}, #{dormname,jdbcType=VARCHAR}, 
      #{dormtype,jdbcType=VARCHAR}, #{dormnumber,jdbcType=INTEGER}, #{dormtel,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dormitory.pojo.Dorm">
    insert into dorm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dormid != null">
        dormId,
      </if>
      <if test="dormbuildid != null">
        dormBuildId,
      </if>
      <if test="dormname != null">
        dormName,
      </if>
      <if test="dormtype != null">
        dormType,
      </if>
      <if test="dormnumber != null">
        dormNumber,
      </if>
      <if test="dormtel != null">
        dormTel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dormid != null">
        #{dormid,jdbcType=INTEGER},
      </if>
      <if test="dormbuildid != null">
        #{dormbuildid,jdbcType=INTEGER},
      </if>
      <if test="dormname != null">
        #{dormname,jdbcType=VARCHAR},
      </if>
      <if test="dormtype != null">
        #{dormtype,jdbcType=VARCHAR},
      </if>
      <if test="dormnumber != null">
        #{dormnumber,jdbcType=INTEGER},
      </if>
      <if test="dormtel != null">
        #{dormtel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dormitory.pojo.DormExample" resultType="java.lang.Long">
    select count(*) from dorm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dorm
    <set>
      <if test="record.dormid != null">
        dormId = #{record.dormid,jdbcType=INTEGER},
      </if>
      <if test="record.dormbuildid != null">
        dormBuildId = #{record.dormbuildid,jdbcType=INTEGER},
      </if>
      <if test="record.dormname != null">
        dormName = #{record.dormname,jdbcType=VARCHAR},
      </if>
      <if test="record.dormtype != null">
        dormType = #{record.dormtype,jdbcType=VARCHAR},
      </if>
      <if test="record.dormnumber != null">
        dormNumber = #{record.dormnumber,jdbcType=INTEGER},
      </if>
      <if test="record.dormtel != null">
        dormTel = #{record.dormtel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dorm
    set dormId = #{record.dormid,jdbcType=INTEGER},
      dormBuildId = #{record.dormbuildid,jdbcType=INTEGER},
      dormName = #{record.dormname,jdbcType=VARCHAR},
      dormType = #{record.dormtype,jdbcType=VARCHAR},
      dormNumber = #{record.dormnumber,jdbcType=INTEGER},
      dormTel = #{record.dormtel,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dormitory.pojo.Dorm">
    update dorm
    <set>
      <if test="dormbuildid != null">
        dormBuildId = #{dormbuildid,jdbcType=INTEGER},
      </if>
      <if test="dormname != null">
        dormName = #{dormname,jdbcType=VARCHAR},
      </if>
      <if test="dormtype != null">
        dormType = #{dormtype,jdbcType=VARCHAR},
      </if>
      <if test="dormnumber != null">
        dormNumber = #{dormnumber,jdbcType=INTEGER},
      </if>
      <if test="dormtel != null">
        dormTel = #{dormtel,jdbcType=VARCHAR},
      </if>
    </set>
    where dormId = #{dormid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dormitory.pojo.Dorm">
    update dorm
    set dormBuildId = #{dormbuildid,jdbcType=INTEGER},
      dormName = #{dormname,jdbcType=VARCHAR},
      dormType = #{dormtype,jdbcType=VARCHAR},
      dormNumber = #{dormnumber,jdbcType=INTEGER},
      dormTel = #{dormtel,jdbcType=VARCHAR}
    where dormId = #{dormid,jdbcType=INTEGER}
  </update>
</mapper>